###############################
# 1. Create a build image
FROM python:3.11.2-slim-buster as BUILDER_IMAGE

# Set directory
WORKDIR /app

# Install needed environment
RUN apt-get -y update; apt-get -y install curl
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install "fastapi[all]"
RUN python3 -m pip install requests
RUN python3 -m pip install pydantic
RUN python3 -m pip install torch
RUN python3 -m pip install accelerate
RUN python3 -m pip install transformers

# Create modeles folder
RUN mkdir modules
RUN python -m pip freeze > requirements.txt 

COPY /../requirements.txt /app
COPY /../simple-qa-pipeline.py /app
COPY /../modules/apis_payload.py /app/modules
COPY /../modules/apis_response_format.py /app/modules
COPY /../modules/load_env.py /app/modules
COPY /../modules/requests_discovery.py /app/modules
COPY /../modules/requests_ibmcloud_token.py /app/modules
COPY /../modules/requests_watsonx.py /app/modules
COPY /../modules/requests_watsonx_deployments.py /app/modules
COPY /../docker/docker_entrypoint.sh /app
COPY /../docker/generate_env-config.sh /app

###############################
# 2. Create a runtime image
FROM python:3.11.2-slim-buster

# Install needed environment
RUN apt-get -y update; apt-get -y install curl

# Set directory
WORKDIR /app

# Copy sources
COPY --from=BUILDER_IMAGE /app /app/
# Install needed environment
RUN python -m pip --no-cache-dir install -r requirements.txt

RUN addgroup simple_qa_pipeline_group
RUN useradd simple_qa_pipeline_user
RUN adduser simple_qa_pipeline_user simple_qa_pipeline_group

USER simple_qa_pipeline_user

RUN ls -a

EXPOSE 8081
CMD ["/bin/sh","docker_entrypoint.sh"]